syntax = "proto3";

package api_v1;
import "google/api/annotations.proto";
import "protocGenSwagger/options/annotations.proto";

option go_package = "/.;api_v1";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Auten Service"
    version: "1.0"
    contact: {
      name: "blueprint-roa-golang-grpc-gateway"
      url: "http://localhost:3031"
      email: "chat@robowealth.co.th"
    }
  }
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  responses: {
    key: "404"
    value: {
      description: "Returned when the resource does not exist."
      schema: {
        json_schema: {
          type: STRING
        }
      }
    }
  }
};

message Token {
  string user_name = 1;
  string token = 2;
  string status = 3;
  int64 created_at = 4;
  int64 updated_at = 5;
  string created_by = 6;
  string updated_by = 7;
}

message TokenCreateRequest {
  string user_name = 1;
  string password = 2;

//  string role_code = 6;
  // fix default to U02_R00 (input_role)
}

message TokenCreateResponse{
  string result = 1;
}

message TokenGetRequest {
  string tokenLogout = 1;

}

message TokenGetResponse{
  string result = 1;
}

message TokenUpdateRequest {
  string logoutRequest = 1;

}

message TokenUpdateResponse{
  string result = 1;

}

service LoginService {
  rpc Create(TokenCreateRequest) returns (TokenCreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/token/login"
      body: "*",
    };
  }
  rpc Get(TokenGetRequest) returns (TokenGetResponse) {
    option (google.api.http) = {
      get: "/api/v1/token/logout"
    };
  }
//  rpc Update(TokenUpdateRequest) returns (TokenUpdateResponse) {
//    option (google.api.http) = {
//      patch: "/api/v1/token/logout2"
//    };
//  }

}